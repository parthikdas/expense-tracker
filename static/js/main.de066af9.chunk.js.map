{"version":3,"sources":["components/Navbar.js","components/Home.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","onClick","toggleMode","type","id","htmlFor","flag","Home","totalIncome","totalExpense","document","title","useState","incomeVal","setIncomeVal","expenseVal","setExpenseVal","balance","setBalance","transactionHistory","querySelectorAll","forEach","e","remove","fetch","api","method","then","response","json","data","i","length","divs","createElement","innerHTML","style","color","borderLeft","getElementById","append","backgroundColor","onLoad","parseInt","bal","Math","abs","display","textAlign","position","right","fontSize","border","background","placeholder","reason","value","amount","doIt","headers","body","JSON","stringify","height","width","overflow","App","setMode","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de066af9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navbar = (props) => {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand b\" href=\"/\"><h3>Expense Tracker</h3></a>\n            </div>\n            <div className={`form-check form-switch text-${props.mode === 'dark'? 'light': 'dark'}`}>\n              <input className=\"form-check-input mx-1\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n              <label className=\"form-check-label mx-2\" htmlFor=\"flexSwitchCheckDefault\"></label>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { api } from '../App'\nimport { useState } from 'react'\nlet flag = true // flag is to stop transactionHistory calling from twice\nconst Home = (props) => {\n    let totalIncome = 0, totalExpense=0\n    document.title = \"Expense Tracker | Home\"; //Change the title\n    const [incomeVal, setIncomeVal] = useState(0);\n    const [expenseVal, setExpenseVal] = useState(0);\n    const [balance, setBalance] = useState(0);\n    // Funtion for new record\n    function create() {\n        let reason = document.getElementById('reason').value, amount = document.getElementById('amount').value, type;\n         if(reason && amount && (amount[0]==='+' || amount[0]==='-')) {\n             let doIt = false;\n             if(amount[0]==='+') {\n                type=\"income\";\n                setIncomeVal(incomeVal+parseInt(amount))\n                doIt = true;\n             } else if(amount[0]==='-'){\n                type=\"expense\";\n                setExpenseVal(expenseVal+parseInt(amount))\n                doIt = true;\n             }\n             if(doIt) {\n                fetch(api,{\n                    headers:{\"Content-Type\":\"application/json; charset=utf-8\" },\n                    method:'POST',\n                    body:JSON.stringify({\n                        reason : reason,\n                        amount : amount,\n                        type : type\n                    })\n                })\n                .then(response=>response.json())\n                flag = true; // For calling transactionHistory\n                transactionHistory();\n                document.getElementById('reason').value = \"\"\n                document.getElementById('amount').value = \"\"\n            }\n         }\n    }\n    function transactionHistory(){ // to show transaction history\n        if(flag) {\n            document.querySelectorAll('.box-box').forEach(e => e.remove());\n            fetch(api, { method: 'GET' }).then(response => response.json()).then(data => {\n                for(let i=0;i<data.length;i++){\n                    let divs = document.createElement('div')\n                    divs.innerHTML = data[i]['reason'] + \" : \" + data[i]['amount']\n                    divs.style.color = data[i]['type'] === 'income' ? \"rgb(85, 170, 1)\" : \"rgba(220, 20, 60, 1)\"\n                    divs.style.borderLeft = data[i]['type'] === 'income' ? \".2rem solid rgb(85, 170, 1)\" : \".2rem solid rgba(220, 20, 60, 1)\"\n                    divs.className += 'box-box'\n                    document.getElementById('box').append(divs)\n                }\n            })\n            flag=false\n        }\n    }\n    function showValues(){ //  Function to show income and expense values when page loaded\n        fetch(api, { method: 'GET' }).then(response => response.json()).then(data => {\n            for(let i=0;i<data.length;i++){\n                if(data[i]['amount'][0] === '+') totalIncome += parseInt(data[i]['amount'])\n                else totalExpense += parseInt(data[i]['amount'])\n            }\n            setIncomeVal(totalIncome)\n            setExpenseVal(totalExpense)\n            let bal = totalIncome + totalExpense\n            bal = bal < 0 ?  Math.abs(bal) + \" (Due)\" : bal\n            setBalance(bal)\n        })\n    }\n    return (\n        <div className=\"container\" style={{backgroundColor : props.mode === 'light'? 'rgba(248,249,250,1)': '#042743', color : props.mode === 'light'? 'black': 'white'}}>\n            <div className=\"show-container\" onLoad={showValues()}>\n                    {/* Overview part */}\n                    <div> {/* Remove div later*/}\n                    <h4>Welcome User</h4>\n                    <div className=\"show-container\" style={{display:\"flex\", textAlign:\"end\", position:\"relative\"}}>\n                            <h5 className=\"my-3\">Balance : {balance}</h5> \n                            <button type=\"button\" data-toggle=\"collapse\" style={{position:\"absolute\",right:0,fontSize:\"2rem\",color:\"#0d6efd\",border:\"none\",background:\"transparent\"}} data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                +\n                            </button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapseExample\">\n                    <div className=\"card card-body\">\n                        <label htmlFor=\"basic-url\">Reason</label>\n                        <div className=\"input-group\">\n                        <input className=\"form-control\" aria-label=\"With textarea\" type=\"text\" id=\"reason\" placeholder=\"Food\"/>\n                        </div>\n                        <label htmlFor=\"basic-url\"  className=\"my-3\">Amount</label>\n                        <div className=\"input-group mb-1\">\n                            <input type=\"text\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" id=\"amount\" placeholder=\"-100\"/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-outline-primary my-3\" onClick={create}>Add</button>\n                    </div>\n                    </div>\n                    <div className=\"amount-box my-3\">\n                        <div className=\"income\">{incomeVal}</div>\n                        <div className=\"expense\">{expenseVal}</div>\n                    </div>\n                </div>\n                {/* Transaction History part */}\n                <h5>Transaction History</h5>\n                <div id=\"box\" style={{height:\"20rem\",width:\"100%\",overflow:\"scroll\"}} onLoad={transactionHistory()}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport { useState } from 'react'\n\nlet api = 'https://crudcrud.com/api/dcc93426b6d44606970fe63085845632/tracker'\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\") // for mode\n  const toggleMode = () => {\n    if(mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <Home mode={mode}/>\n    </div>\n  );\n}\n\nexport default App;\nexport {api};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}